{"version":3,"file":"InstantIssuing.yaml-DaKKUbdx.js","sources":["../../node_modules/.zudoku/processed/InstantIssuing.yaml.js"],"sourcesContent":["const __refs = Array.from({ length: 3 }, () => ({}));\nconst __refMap = {\n  \"#/components/parameters/apiKey\": __refs[0],\n  \"#/components/parameters/contentType\": __refs[1],\n  \"#/components/schemas/Customer\": __refs[2]\n};\nObject.assign(__refs[0], {\n  \"name\": \"x-api-key\",\n  \"in\": \"header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\"\n  }\n});\nObject.assign(__refs[1], {\n  \"name\": \"Content-Type\",\n  \"in\": \"header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\",\n    \"default\": \"application/json\"\n  }\n});\nObject.assign(__refs[2], {\n  \"required\": [\n    \"RequestType\",\n    \"AccountNum\",\n    \"BranchName\",\n    \"CardRefNum\",\n    \"EmbossedName\",\n    \"NationalId\",\n    \"Passport\",\n    \"FirstName\",\n    \"LastName\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"RequestType\": {\n      \"type\": \"string\",\n      \"description\": \"- `1-NewAccountNewCustomer`: New customer (requires fields `FirstName`,`LastName`).\\n- `2-NewAccountExistingCustomer`: Existing customer.\\n\"\n    },\n    \"BranchName\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"GTBR\"\n      ],\n      \"description\": \"Branch name `GTBR`\"\n    },\n    \"CardRefNum\": {\n      \"type\": \"string\",\n      \"description\": \"Card Reference Number\"\n    },\n    \"EmbossedName\": {\n      \"type\": \"string\",\n      \"description\": \"Name to emboss on the card\"\n    },\n    \"AccountNum\": {\n      \"type\": \"string\",\n      \"description\": \"Customer's account number\"\n    },\n    \"FirstName\": {\n      \"type\": \"string\",\n      \"description\": \" `Mandatory` For new customers (`RequestType: NewAccountNewCustomer`)\"\n    },\n    \"MiddleName\": {\n      \"type\": \"string\"\n    },\n    \"LastName\": {\n      \"type\": \"string\",\n      \"description\": \" `Mandatory` For new customers (`RequestType: NewAccountNewCustomer`)\"\n    },\n    \"NationalId\": {\n      \"type\": \"string\",\n      \"description\": \" `Mandatory` if Passport is not provided \"\n    },\n    \"Passport\": {\n      \"type\": \"string\",\n      \"description\": \" `Mandatory` if NationalId is not provided \"\n    },\n    \"BirthDate\": {\n      \"type\": \"string\",\n      \"format\": \"date\",\n      \"examples\": [\n        \"1990-01-01\"\n      ]\n    },\n    \"Email\": {\n      \"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"MobilePhone\": {\n      \"type\": \"string\"\n    },\n    \"StreetTitle\": {\n      \"type\": \"string\"\n    },\n    \"Zip\": {\n      \"type\": \"string\"\n    }\n  }\n});\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"Enza REST API Documentation\",\n    \"description\": \"**Welcome to the Enza REST API Developer Portal. Our API provides seamless integration for instant issuing services across Africa. This portal offers all the necessary tools, detailed documentation, and API endpoints required to empower your financial operations with real-time card issuance capabilities. Explore the portal, integrate with ease, and unlock secure, efficient, and scalable instant issuing solutions.**\\n\",\n    \"version\": \"2025-02-16T14:26:47Z\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://uat-api.enza.cloud/TX/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Customers\"\n    },\n    {\n      \"name\": \"Accounts\"\n    },\n    {\n      \"name\": \"Card Management\"\n    },\n    {\n      \"name\": \"Instant Issuing\"\n    }\n  ],\n  \"paths\": {\n    \"/accounts/by-rid/{rid}\": {\n      \"get\": {\n        \"summary\": \"Get Account Info\",\n        \"description\": \"Retrieve account details based on the accountâ€™s unique RID.\",\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"rid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The unique RID of the account to retrieve.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved account information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"rid\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"0000112\"\n                      ]\n                    },\n                    \"type_rid\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"DebitAccTypeGTBR[RWF]\"\n                      ]\n                    },\n                    \"branch_name\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"GTBR_Branch\"\n                      ]\n                    },\n                    \"client_rid\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"000011\"\n                      ]\n                    },\n                    \"main_ccy\": {\n                      \"type\": \"integer\",\n                      \"examples\": [\n                        646\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request, invalid data format or missing parameters.\"\n          },\n          \"404\": {\n            \"description\": \"Account with the given RID not found.\"\n          }\n        }\n      }\n    },\n    \"/cards/by-rid/{rid}\": {\n      \"get\": {\n        \"summary\": \"Get Card Info\",\n        \"description\": \"Retrieve detailed information of a card by its RID (External ID).\",\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"rid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The unique identifier for the card (External RID).\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved card information.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"card\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"rid\": {\n                          \"type\": \"string\",\n                          \"description\": \"The card external RID.\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"description\": \"The current status of the card.\"\n                        },\n                        \"pan\": {\n                          \"type\": \"string\",\n                          \"description\": \"The Primary Account Number (PAN) of the card.\"\n                        },\n                        \"exp_time\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\",\n                          \"description\": \"Expiration time of the card.\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Card not found.\"\n          }\n        }\n      }\n    },\n    \"/cards/tdsenrollement\": {\n      \"post\": {\n        \"summary\": \"Change Ecom Status\",\n        \"description\": \"Modify the Ecom Status\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for updating the TDS enrollment status of a card.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"ECstatusEnable\",\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"The PAN of the card whose Ecom Status is being updated.\"\n                  },\n                  \"ECstatusEnable\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Ecom Status (e.g., 1 for enrolled, 0 for not enrolled).\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"description\": \"Card Status changed successfully! (Active)\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Request Example\",\n                    \"value\": {\n                      \"message\": \"Card Status changed successfully! (Active)\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request response \\\"Wrong Field in the body request\\\"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"Bad Request: Invalid Request Body\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"400\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"instancePath\",\n                              \"schemaPath\",\n                              \"keyword\",\n                              \"params\",\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"instancePath\": {\n                                \"description\": \"'/body' JSON Pointer to the part of the request body that caused the error\",\n                                \"type\": \"string\"\n                              },\n                              \"schemaPath\": {\n                                \"description\": \"'#/properties/body/required' JSON Schema path indicating the validation rule that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"keyword\": {\n                                \"description\": \"'required' Validation keyword that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"params\": {\n                                \"description\": \"Additional parameters about the validation failure\",\n                                \"type\": \"object\",\n                                \"required\": \"-missingProperty\",\n                                \"properties\": {\n                                  \"missingProperty\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"message\": {\n                                \"description\": \"Error message describing the validation failure field\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Bad Request - Missing Required Property\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Bad Request: Invalid Request Body\",\n                        \"statusCode\": 400,\n                        \"errorDetails\": [\n                          {\n                            \"instancePath\": \"/body\",\n                            \"schemaPath\": \"#/properties/body/required\",\n                            \"keyword\": \"required\",\n                            \"params\": {\n                              \"missingProperty\": \"ECstatusEnable or CardRefNum\"\n                            },\n                            \"message\": \"must have required property\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"This Card is already in this status\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"500\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"This Card is already in this status\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerErrorExample\": {\n                    \"summary\": \"This Card is already in this status\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"This Card is already in this status\",\n                        \"statusCode\": \"500\",\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"This Card is already in this status\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Gateway Timeout\"\n                        },\n                        \"statusCode\": {\n                          \"type\": \"integer\",\n                          \"description\": \"504\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"Task timed out after 2.02 seconds\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"gatewayTimeoutExample\": {\n                    \"summary\": \"Gateway Timeout Example\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Gateway Timeout\",\n                        \"statusCode\": 504,\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"Task timed out after 2.02 seconds\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/activate\": {\n      \"post\": {\n        \"summary\": \"Activate Card\",\n        \"description\": \"Activate a card by providing the CardStatus and CardRefNum.\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for activating a card.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"CardStatus\",\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardStatus\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"Active\",\n                      \"Deactivated\",\n                      \"New\",\n                      \"Blocked\",\n                      \"Referral\",\n                      \"Lost\",\n                      \"Stolen\",\n                      \"Damaged\",\n                      \"Compromised\",\n                      \"Closed\"\n                    ],\n                    \"description\": \"The status of the card.\"\n                  },\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"The CardRefNum of the card to be activated.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"description\": \"Card Activated successfully!\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Request Example\",\n                    \"value\": {\n                      \"message\": \"Card Activated successfully!\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request response \\\"Wrong Field in the body request\\\"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"Bad Request: Invalid Request Body\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"400\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"instancePath\",\n                              \"schemaPath\",\n                              \"keyword\",\n                              \"params\",\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"instancePath\": {\n                                \"description\": \"'/body' JSON Pointer to the part of the request body that caused the error\",\n                                \"type\": \"string\"\n                              },\n                              \"schemaPath\": {\n                                \"description\": \"'#/properties/body/required' JSON Schema path indicating the validation rule that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"keyword\": {\n                                \"description\": \"'required' Validation keyword that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"params\": {\n                                \"description\": \"Additional parameters about the validation failure\",\n                                \"type\": \"object\",\n                                \"required\": \"-missingProperty\",\n                                \"properties\": {\n                                  \"missingProperty\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"message\": {\n                                \"description\": \"Error message describing the validation failure field\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Bad Request - Missing Required Property\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Bad Request: Invalid Request Body\",\n                        \"statusCode\": 400,\n                        \"errorDetails\": [\n                          {\n                            \"instancePath\": \"/body\",\n                            \"schemaPath\": \"#/properties/body/required\",\n                            \"keyword\": \"required\",\n                            \"params\": {\n                              \"missingProperty\": \"CardRefNum or CardStatus\"\n                            },\n                            \"message\": \"must have required property\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"This Card Is Already Activated\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"500\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"This Card Is Already Activated\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerErrorExample\": {\n                    \"summary\": \"This Card Is Already Activated\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"This Card Is Already Activated\",\n                        \"statusCode\": \"500\",\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"This Card Is Already Activated\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Gateway Timeout\"\n                        },\n                        \"statusCode\": {\n                          \"type\": \"integer\",\n                          \"description\": \"504\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"Task timed out after 2.02 seconds\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"gatewayTimeoutExample\": {\n                    \"summary\": \"Gateway Timeout Example\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Gateway Timeout\",\n                        \"statusCode\": 504,\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"Task timed out after 2.02 seconds\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/deletetoken\": {\n      \"post\": {\n        \"summary\": \"DeleteToken Request\",\n        \"description\": \"Remove a token associated with a card using the CardRefNum.\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for deleting a token.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"The reference number of the card whose token is being deleted.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the token.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"description\": \"Confirmation message that the token is deleted.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Token Deletion\",\n                    \"value\": {\n                      \"message\": \"Success, Token is Deleted!\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request response \\\"Wrong Field in the body request\\\"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"Bad Request: Invalid Request Body\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"400\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"instancePath\",\n                              \"schemaPath\",\n                              \"keyword\",\n                              \"params\",\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"instancePath\": {\n                                \"description\": \"'/body' JSON Pointer to the part of the request body that caused the error\",\n                                \"type\": \"string\"\n                              },\n                              \"schemaPath\": {\n                                \"description\": \"'#/properties/body/required' JSON Schema path indicating the validation rule that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"keyword\": {\n                                \"description\": \"'required' Validation keyword that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"params\": {\n                                \"description\": \"Additional parameters about the validation failure\",\n                                \"type\": \"object\",\n                                \"required\": \"-missingProperty\",\n                                \"properties\": {\n                                  \"missingProperty\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"message\": {\n                                \"description\": \"Error message describing the validation failure field\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Bad Request - Missing Required Property \\\"CardRefNum\\\"\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Bad Request: Invalid Request Body\",\n                        \"statusCode\": 400,\n                        \"errorDetails\": [\n                          {\n                            \"instancePath\": \"/body\",\n                            \"schemaPath\": \"#/properties/body/required\",\n                            \"keyword\": \"required\",\n                            \"params\": {\n                              \"missingProperty\": \"CardRefNum\"\n                            },\n                            \"message\": \"must have required property `CardRefNum`\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Token not found for the provided CardRefNum.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"No token was found.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"notFoundExample\": {\n                    \"summary\": \"Token Not Found\",\n                    \"value\": {\n                      \"errorMessage\": \"Token not found for the provided CardRefNum.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Internal server error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"Explanation of the server error.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerErrorExample\": {\n                    \"summary\": \"Server Error Example\",\n                    \"value\": {\n                      \"errorMessage\": \"Internal server error. Please try again later.\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/retrievetransactions\": {\n      \"post\": {\n        \"summary\": \"Retrieve Card Transactions\",\n        \"description\": \"Retrieve a list of transactions associated with a specific card.\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for fetching transactions.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"The reference number of the card whose transactions are being retrieved.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"Kind\",\n                    \"HasMore\"\n                  ],\n                  \"properties\": {\n                    \"Kind\": {\n                      \"type\": \"string\",\n                      \"description\": \"The type of response, indicating transactions.\"\n                    },\n                    \"HasMore\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"Indicates if there are more transactions available beyond the current response.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Transactions Retrieval\",\n                    \"value\": {\n                      \"Kind\": \"Transactions\",\n                      \"HasMore\": false\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request due to invalid input.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"Explanation of what went wrong.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Invalid Request Example\",\n                    \"value\": {\n                      \"errorMessage\": \"Invalid CardRefNum provided.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"No transactions found for the provided CardRefNum.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerErrorExample\": {\n                    \"summary\": \"Server Error Example\",\n                    \"value\": {\n                      \"errorMessage\": \"No transactions found for the provided CardRefNum.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Gateway Timeout\"\n                        },\n                        \"statusCode\": {\n                          \"type\": \"integer\",\n                          \"description\": \"504\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"Task timed out after 2.02 seconds\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"gatewayTimeoutExample\": {\n                    \"summary\": \"Gateway Timeout Example\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Gateway Timeout\",\n                        \"statusCode\": 504,\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"Task timed out after 2.02 seconds\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/createcard\": {\n      \"post\": {\n        \"summary\": \"Create a New Card\",\n        \"description\": \"Create a new card by providing a unique CardRefNum.\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for creating a new card.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"The reference number for the new card.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Card successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"description\": \"Card created successfully!.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Card Created Successfully\",\n                    \"value\": {\n                      \"message\": \"Success, CardCreated!\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request due to invalid input.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"Invalid CardRefNum provided.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Invalid Request Example\",\n                    \"value\": {\n                      \"errorMessage\": \"Invalid CardRefNum provided.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error while processing the request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"Card with this reference number already exists.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerErrorExample\": {\n                    \"summary\": \"Server Error Example\",\n                    \"value\": {\n                      \"errorMessage\": \"Card with this reference number already exists.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Gateway Timeout\"\n                        },\n                        \"statusCode\": {\n                          \"type\": \"integer\",\n                          \"description\": \"504\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"Task timed out after 2.02 seconds\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"gatewayTimeoutExample\": {\n                    \"summary\": \"Gateway Timeout Example\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Gateway Timeout\",\n                        \"statusCode\": 504,\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"Task timed out after 2.02 seconds\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/instantissuing\": {\n      \"post\": {\n        \"summary\": \"Instant Issuing Request\",\n        \"description\": \"## Overview\\nThis API endpoint lets you link a pre-produced card to a customer's account. It works in two ways:\\n-  1- Create Account to a new Customer, and link the pre-produced card. \\n-  2- Create Account to an existing customer, and link the pre-produced card. \\n\\nYou can use this endpoint for both new and existing customers, depending on your needs. Make sure to provide the correct card reference number and RequestType when making the request.\\n\\n## `RequestType`\\nYou **must** set the `RequestType` parameter correctly:\\n\\n- **For new customers:**      `\\\"1-NewAccountNewCustomer\\\"`\\n- **For existing customers:** `\\\"2-NewAccountExistingCustomer\\\"`\\n\\nBy correctly setting `RequestType` and including all required fields, you ensure that the API can create the account successfully without validation errors.\\n\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"tags\": [\n          \"Instant Issuing\"\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Customer\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"RequestType\": \"NewAccountNewCustomer\",\n                    \"LastName\": \"EEE\",\n                    \"FirstName\": \"Cust02\",\n                    \"BirthDate\": \"1990-01-01\",\n                    \"Passport\": \"76238310075\",\n                    \"Email\": \"test@test.com\",\n                    \"MobilePhone\": \"9991234567\",\n                    \"StreetTitle\": \"Baker's Str\",\n                    \"Zip\": \"WC1X 9NX\",\n                    \"AccountNum\": \"AAABBB150573\",\n                    \"BranchName\": \"Main Branch\",\n                    \"CardRefNum\": \"000515\",\n                    \"EmbossedName\": \"Cust02 New\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"message\"\n                  ],\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"description\": \"Request: 'NewAccountNewCustomer' Processed Successfully.\"\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Request Example\",\n                    \"value\": {\n                      \"message\": \"Request: 'NewAccountNewCustomer' Processed Successfully.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request response \\\"Wrong Field in the body request\\\"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"Bad Request: Invalid Request Body\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"400\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"instancePath\",\n                              \"schemaPath\",\n                              \"keyword\",\n                              \"params\",\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"instancePath\": {\n                                \"description\": \"'/body' JSON Pointer to the part of the request body that caused the error\",\n                                \"type\": \"string\"\n                              },\n                              \"schemaPath\": {\n                                \"description\": \"'#/properties/body/required' JSON Schema path indicating the validation rule that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"keyword\": {\n                                \"description\": \"'required' Validation keyword that failed\",\n                                \"type\": \"string\"\n                              },\n                              \"params\": {\n                                \"description\": \"Additional parameters about the validation failure\",\n                                \"type\": \"object\",\n                                \"required\": \"-missingProperty\",\n                                \"properties\": {\n                                  \"missingProperty\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"message\": {\n                                \"description\": \"'RequestType' Error message describing the validation failure field\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Bad Request - Missing Required Property\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Bad Request: Invalid Request Body\",\n                        \"statusCode\": 400,\n                        \"errorDetails\": [\n                          {\n                            \"instancePath\": \"/body\",\n                            \"schemaPath\": \"#/properties/body/required\",\n                            \"keyword\": \"required\",\n                            \"params\": {\n                              \"missingProperty\": \"RequestType\"\n                            },\n                            \"message\": \"must have required property 'RequestType'\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"description\": \"This Card Is Already Assigned To A Customer!\",\n                          \"type\": \"string\"\n                        },\n                        \"statusCode\": {\n                          \"description\": \"500\",\n                          \"type\": \"integer\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                              \"message\"\n                            ],\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"This Card Is Already Assigned To A Customer!\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"internalServerErrorExample\": {\n                    \"summary\": \"This Card Is Already Assigned To A Customer!\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"This Card Is Already Assigned To A Customer!\",\n                        \"statusCode\": \"500\",\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"This Card Is Already Assigned To A Customer!\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout error response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"errorType\",\n                        \"statusCode\",\n                        \"errorDetails\"\n                      ],\n                      \"properties\": {\n                        \"errorType\": {\n                          \"type\": \"string\",\n                          \"description\": \"Gateway Timeout\"\n                        },\n                        \"statusCode\": {\n                          \"type\": \"integer\",\n                          \"description\": \"504\"\n                        },\n                        \"errorDetails\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"message\": {\n                                \"description\": \"Task timed out after 2.02 seconds\",\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"gatewayTimeoutExample\": {\n                    \"summary\": \"Gateway Timeout Example\",\n                    \"value\": {\n                      \"errorMessage\": {\n                        \"errorType\": \"Gateway Timeout\",\n                        \"statusCode\": 504,\n                        \"errorDetails\": [\n                          {\n                            \"message\": \"Task timed out after 2.02 seconds\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Customer\": {\n        \"required\": [\n          \"RequestType\",\n          \"AccountNum\",\n          \"BranchName\",\n          \"CardRefNum\",\n          \"EmbossedName\",\n          \"NationalId\",\n          \"Passport\",\n          \"FirstName\",\n          \"LastName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"RequestType\": {\n            \"type\": \"string\",\n            \"description\": \"- `1-NewAccountNewCustomer`: New customer (requires fields `FirstName`,`LastName`).\\n- `2-NewAccountExistingCustomer`: Existing customer.\\n\"\n          },\n          \"BranchName\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"GTBR\"\n            ],\n            \"description\": \"Branch name `GTBR`\"\n          },\n          \"CardRefNum\": {\n            \"type\": \"string\",\n            \"description\": \"Card Reference Number\"\n          },\n          \"EmbossedName\": {\n            \"type\": \"string\",\n            \"description\": \"Name to emboss on the card\"\n          },\n          \"AccountNum\": {\n            \"type\": \"string\",\n            \"description\": \"Customer's account number\"\n          },\n          \"FirstName\": {\n            \"type\": \"string\",\n            \"description\": \" `Mandatory` For new customers (`RequestType: NewAccountNewCustomer`)\"\n          },\n          \"MiddleName\": {\n            \"type\": \"string\"\n          },\n          \"LastName\": {\n            \"type\": \"string\",\n            \"description\": \" `Mandatory` For new customers (`RequestType: NewAccountNewCustomer`)\"\n          },\n          \"NationalId\": {\n            \"type\": \"string\",\n            \"description\": \" `Mandatory` if Passport is not provided \"\n          },\n          \"Passport\": {\n            \"type\": \"string\",\n            \"description\": \" `Mandatory` if NationalId is not provided \"\n          },\n          \"BirthDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"examples\": [\n              \"1990-01-01\"\n            ]\n          },\n          \"Email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"MobilePhone\": {\n            \"type\": \"string\"\n          },\n          \"StreetTitle\": {\n            \"type\": \"string\"\n          },\n          \"Zip\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"apiKey\": {\n        \"name\": \"x-api-key\",\n        \"in\": \"header\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"contentType\": {\n        \"name\": \"Content-Type\",\n        \"in\": \"header\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"default\": \"application/json\"\n        }\n      }\n    }\n  }\n};"],"names":["__refs","__refMap","schema"],"mappings":"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X,OAAU,CACR,gBAAmB,8BACpB,EACD,QAAW,6BACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,YAAe,sCACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,MACf,KAAQ,SACT,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,YAAe,sCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,2BAA8B,CAC5B,QAAW,sCACX,MAAS,CACP,aAAgB,CACd,UAAa,sCACb,WAAc,MACd,aAAgB,CACd,CACE,QAAW,qCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,iBAChB,EACD,WAAc,CACZ,KAAQ,UACR,YAAe,KAChB,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,YAAe,oCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,sBAAyB,CACvB,QAAW,0BACX,MAAS,CACP,aAAgB,CACd,UAAa,kBACb,WAAc,IACd,aAAgB,CACd,CACE,QAAW,mCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,kBAAmB,CACjB,KAAQ,CACN,QAAW,gBACX,YAAe,8DACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,KAAQ,CACN,OACD,EACD,YAAe,CACb,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACA,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,KAAQ,CACN,SACA,cACA,MACA,UACA,WACA,OACA,SACA,UACA,cACA,QACD,EACD,YAAe,yBAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,6CACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,YAAe,8BACrC,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,6BACX,MAAS,CACP,QAAW,8BACjC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,yDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,YAAe,oCACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,MACf,KAAQ,SACT,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,eACA,aACA,UACA,SACA,SACD,EACD,WAAc,CACZ,aAAgB,CACd,YAAe,6EACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,2FACf,KAAQ,QACT,EACD,QAAW,CACT,YAAe,4CACf,KAAQ,QACT,EACD,OAAU,CACR,YAAe,qDACf,KAAQ,SACR,SAAY,mBACZ,WAAc,CACZ,gBAAmB,CACjB,KAAQ,QAC5C,CACA,CAC+B,EACD,QAAW,CACT,YAAe,wDACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,0CACX,MAAS,CACP,aAAgB,CACd,UAAa,oCACb,WAAc,IACd,aAAgB,CACd,CACE,aAAgB,QAChB,WAAc,6BACd,QAAW,WACX,OAAU,CACR,gBAAmB,0BACpB,EACD,QAAW,6BACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,YAAe,iCACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,MACf,KAAQ,SACT,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,YAAe,iCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,2BAA8B,CAC5B,QAAW,iCACX,MAAS,CACP,aAAgB,CACd,UAAa,iCACb,WAAc,MACd,aAAgB,CACd,CACE,QAAW,gCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,iBAChB,EACD,WAAc,CACZ,KAAQ,UACR,YAAe,KAChB,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,YAAe,oCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,sBAAyB,CACvB,QAAW,0BACX,MAAS,CACP,aAAgB,CACd,UAAa,kBACb,WAAc,IACd,aAAgB,CACd,CACE,QAAW,mCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,qBAAsB,CACpB,KAAQ,CACN,QAAW,sBACX,YAAe,8DACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,KAAQ,CACN,OACD,EACD,YAAe,CACb,YAAe,gCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,gEACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,YAAe,iDACrC,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,4BACX,MAAS,CACP,QAAW,4BACjC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,yDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,YAAe,oCACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,MACf,KAAQ,SACT,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,eACA,aACA,UACA,SACA,SACD,EACD,WAAc,CACZ,aAAgB,CACd,YAAe,6EACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,2FACf,KAAQ,QACT,EACD,QAAW,CACT,YAAe,4CACf,KAAQ,QACT,EACD,OAAU,CACR,YAAe,qDACf,KAAQ,SACR,SAAY,mBACZ,WAAc,CACZ,gBAAmB,CACjB,KAAQ,QAC5C,CACA,CAC+B,EACD,QAAW,CACT,YAAe,wDACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,uDACX,MAAS,CACP,aAAgB,CACd,UAAa,oCACb,WAAc,IACd,aAAgB,CACd,CACE,aAAgB,QAChB,WAAc,6BACd,QAAW,WACX,OAAU,CACR,gBAAmB,YACpB,EACD,QAAW,0CACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,+CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,qBACrC,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,kBACX,MAAS,CACP,aAAgB,8CACtC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,sDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,kCACrC,CACA,CACiB,EACD,SAAY,CACV,2BAA8B,CAC5B,QAAW,uBACX,MAAS,CACP,aAAgB,gDACtC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,8BAA+B,CAC7B,KAAQ,CACN,QAAW,6BACX,YAAe,mEACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,KAAQ,CACN,OACD,EACD,YAAe,CACb,YAAe,qCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,0EACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,SACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,YAAe,gDAChB,EACD,QAAW,CACT,KAAQ,UACR,YAAe,iFACrC,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,oCACX,MAAS,CACP,KAAQ,eACR,QAAW,EACjC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,oCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,iCACrC,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,0BACX,MAAS,CACP,aAAgB,8BACtC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,sDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,oDACrC,CACA,CACiB,EACD,SAAY,CACV,2BAA8B,CAC5B,QAAW,uBACX,MAAS,CACP,aAAgB,oDACtC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,iBAChB,EACD,WAAc,CACZ,KAAQ,UACR,YAAe,KAChB,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,YAAe,oCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,sBAAyB,CACvB,QAAW,0BACX,MAAS,CACP,aAAgB,CACd,UAAa,kBACb,WAAc,IACd,aAAgB,CACd,CACE,QAAW,mCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,oBAAqB,CACnB,KAAQ,CACN,QAAW,oBACX,YAAe,sDACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,KAAQ,CACN,OACD,EACD,YAAe,CACb,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,wCACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,YAAe,6BACrC,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,4BACX,MAAS,CACP,QAAW,uBACjC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,oCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,8BACrC,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,0BACX,MAAS,CACP,aAAgB,8BACtC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,sDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,iDACrC,CACA,CACiB,EACD,SAAY,CACV,2BAA8B,CAC5B,QAAW,uBACX,MAAS,CACP,aAAgB,iDACtC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,iBAChB,EACD,WAAc,CACZ,KAAQ,UACR,YAAe,KAChB,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,YAAe,oCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,sBAAyB,CACvB,QAAW,0BACX,MAAS,CACP,aAAgB,CACd,UAAa,kBACb,WAAc,IACd,aAAgB,CACd,CACE,QAAW,mCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,kBAAmB,CACjB,KAAQ,CACN,QAAW,0BACX,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,KAAQ,CACN,iBACD,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,+BAA+B,EAClD,SAAY,CACV,QAAW,CACT,MAAS,CACP,YAAe,wBACf,SAAY,MACZ,UAAa,SACb,UAAa,aACb,SAAY,cACZ,MAAS,gBACT,YAAe,aACf,YAAe,cACf,IAAO,WACP,WAAc,eACd,WAAc,cACd,WAAc,SACd,aAAgB,YACpC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,YAAe,0DACrC,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,6BACX,MAAS,CACP,QAAW,0DACjC,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,yDACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,YAAe,oCACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,MACf,KAAQ,SACT,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,eACA,aACA,UACA,SACA,SACD,EACD,WAAc,CACZ,aAAgB,CACd,YAAe,6EACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,2FACf,KAAQ,QACT,EACD,QAAW,CACT,YAAe,4CACf,KAAQ,QACT,EACD,OAAU,CACR,YAAe,qDACf,KAAQ,SACR,SAAY,mBACZ,WAAc,CACZ,gBAAmB,CACjB,KAAQ,QAC5C,CACA,CAC+B,EACD,QAAW,CACT,YAAe,sEACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,0CACX,MAAS,CACP,aAAgB,CACd,UAAa,oCACb,WAAc,IACd,aAAgB,CACd,CACE,aAAgB,QAChB,WAAc,6BACd,QAAW,WACX,OAAU,CACR,gBAAmB,aACpB,EACD,QAAW,2CACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,YAAe,+CACf,KAAQ,QACT,EACD,WAAc,CACZ,YAAe,MACf,KAAQ,SACT,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,YAAe,+CACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,2BAA8B,CAC5B,QAAW,+CACX,MAAS,CACP,aAAgB,CACd,UAAa,+CACb,WAAc,MACd,aAAgB,CACd,CACE,QAAW,8CACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,YACA,aACA,cACD,EACD,WAAc,CACZ,UAAa,CACX,KAAQ,SACR,YAAe,iBAChB,EACD,WAAc,CACZ,KAAQ,UACR,YAAe,KAChB,EACD,aAAgB,CACd,KAAQ,QACR,MAAS,CACP,KAAQ,SACR,WAAc,CACZ,QAAW,CACT,YAAe,oCACf,KAAQ,QACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,sBAAyB,CACvB,QAAW,0BACX,MAAS,CACP,aAAgB,CACd,UAAa,kBACb,WAAc,IACd,aAAgB,CACd,CACE,QAAW,mCACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACG,EACD,WAAc,CACZ,QAAW,CACT,SAAY,CACV,SAAY,CACV,cACA,aACA,aACA,aACA,eACA,aACA,WACA,YACA,UACD,EACD,KAAQ,SACR,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,YAAe,6IAChB,EACD,WAAc,CACZ,KAAQ,SACR,KAAQ,CACN,MACD,EACD,YAAe,oBAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,uBAChB,EACD,aAAgB,CACd,KAAQ,SACR,YAAe,4BAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,2BAChB,EACD,UAAa,CACX,KAAQ,SACR,YAAe,uEAChB,EACD,WAAc,CACZ,KAAQ,QACT,EACD,SAAY,CACV,KAAQ,SACR,YAAe,uEAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,2CAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,6CAChB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,SAAY,CACV,YACd,CACW,EACD,MAAS,CACP,KAAQ,SACR,OAAU,OACX,EACD,YAAe,CACb,KAAQ,QACT,EACD,YAAe,CACb,KAAQ,QACT,EACD,IAAO,CACL,KAAQ,QACpB,CACA,CACA,CACK,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,YACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,QAClB,CACO,EACD,YAAe,CACb,KAAQ,eACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,SACR,QAAW,kBACrB,CACA,CACA,CACA,CACA","x_google_ignoreList":[0]}