openapi: "3.0.1"
info:
  title: "Enza REST API Documentation"
  description: |
    **Welcome to the Enza REST API Developer Portal. Our API provides seamless integration for instant issuing services across Africa. This portal offers all the necessary tools, detailed documentation, and API endpoints required to empower your financial operations with real-time card issuance capabilities. Explore the portal, integrate with ease, and unlock secure, efficient, and scalable instant issuing solutions.**
  version: "2025-02-16T14:26:47Z"

servers:
  - url: "https://uat-api.enza.cloud/TX/v1"

tags:
  - name: "Instant Issuing"
    description: "Instant Issuing Operations"
  - name: "Cards"
    description: "Cards Operations"

paths:
  /instantissuing:
    post:
      operationId: processGroupRequest
      summary: Instant Issuing Request
      description: |
        ## Overview
        This API endpoint lets you link a pre-produced card to a customer's account. It works in two ways:
        -  1- Create Account to a new Customer, and link the pre-produced card. 
        -  2- Create Account to an existing customer, and link the pre-produced card. 
        
        You can use this endpoint for both new and existing customers, depending on your needs. Make sure to provide the correct card reference number and RequestType when making the request.

        ## `RequestType`
        You **must** set the `RequestType` parameter correctly:

        - **For new customers:**      `"1-NewAccountNewCustomer"`
        - **For existing customers:** `"2-NewAccountExistingCustomer"`

        By correctly setting `RequestType` and including all required fields, you ensure that the API can create the account successfully without validation errors.
      tags:
        - Instant Issuing
      parameters:
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/contentType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            example:
              RequestType: "NewAccountNewCustomer"
              LastName: "EEE"
              FirstName: "Cust02"
              BirthDate: "1990-01-01"
              Passport: "76238310075"
              Email: "test@test.com"
              MobilePhone: "9991234567"
              StreetTitle: "Baker's Str"
              Zip: "WC1X 9NX"
              AccountNum: "AAABBB150573"
              BranchName: "Main Branch"
              CardRefNum: "000515"
              EmbossedName: "Cust02 New"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: "Request: 'NewAccountNewCustomer' Processed Successfully."
              examples:
                successResponse:
                  summary: Successful Request Example
                  value:
                    message: "Request: 'NewAccountNewCustomer' Processed Successfully."
        "400":
          description: 'Bad request response "Wrong Field in the body request"'
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        description: "Bad Request: Invalid Request Body"
                        type: string
                      statusCode:
                        description: "400"
                        type: integer
                      errorDetails:
                        type: array
                        items:
                          type: object
                          required:
                            - instancePath
                            - schemaPath
                            - keyword
                            - params
                            - message
                          properties:
                            instancePath:
                              type: string
                            schemaPath:
                              type: string
                            keyword:
                              type: string
                            params:
                              type: object
                              required:
                                - missingProperty
                              properties:
                                missingProperty:
                                  type: string
                            message:
                              type: string
              examples:
                badRequestExample:
                  summary: Bad Request - Missing Required Property
                  value:
                    errorMessage:
                      errorType: "Bad Request: Invalid Request Body"
                      statusCode: 400
                      errorDetails:
                        - instancePath: "/body"
                          schemaPath: "#/properties/body/required"
                          keyword: "required"
                          params:
                            missingProperty: "RequestType"
                          message: "must have required property 'RequestType'"
        "500":
          description: Internal server error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        description: "This Card Is Already Assigned To A Customer!"
                        type: string
                      statusCode:
                        description: "500"
                        type: integer
                      errorDetails:
                        type: array
                        items:
                          type: object
                          required:
                            - message
                          properties:
                            message:
                              type: string
              examples:
                internalServerErrorExample:
                  summary: This Card Is Already Assigned To A Customer!
                  value:
                    errorMessage:
                      errorType: "This Card Is Already Assigned To A Customer!"
                      statusCode: "500"
                      errorDetails:
                        - message: "This Card Is Already Assigned To A Customer!"
        "504":
          description: Gateway Timeout error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        type: string
                        description: "Gateway Timeout"
                      statusCode:
                        type: integer
                        description: "504"
                      errorDetails:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
              examples:
                gatewayTimeoutExample:
                  summary: Gateway Timeout Example
                  value:
                    errorMessage:
                      errorType: "Gateway Timeout"
                      statusCode: 504
                      errorDetails:
                        - message: "Task timed out after 2.02 seconds"

  /cards/tdsenrollement:
    post:
      operationId: changeEcommerceStatus
      summary: Change E-commerce Status Request
      description: This request is used to modify the e-commerce status associated with card transactions by providing ECstatus and the card reference number.
      tags:
        - Cards
      requestBody:
        description: Details for updating ECstatus of a card.
        content:
          application/json:
            schema:
              type: object
              required:
                - ECstatusEnable
                - CardRefNum
              properties:
                CardRefNum:
                  type: string
                  description: Card Reference Number.
                ECstatusEnable:
                  type: integer
                  description: ECstatus ( "1" -> Enrolled, "0" -> Not enrolled).
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: "Card Status changed successfully! (Active)"
              examples:
                successResponse:
                  summary: Successful Request Example
                  value:
                    message: "Card Status changed successfully! (Active)"
        "400":
          description: Bad request response "Wrong Field in the body request"
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        description: "Bad Request: Invalid Request Body"
                        type: string
                      statusCode:
                        description: "400"
                        type: integer
                      errorDetails:
                        type: array
                        items:
                          type: object
                          required:
                            - instancePath
                            - schemaPath
                            - keyword
                            - params
                            - message
                          properties:
                            instancePath:
                              type: string
                            schemaPath:
                              type: string
                            keyword:
                              type: string
                            params:
                              type: object
                              required:
                                - missingProperty
                              properties:
                                missingProperty:
                                  type: string
                            message:
                              type: string
              examples:
                badRequestExample:
                  summary: Bad Request - Missing Required Property
                  value:
                    errorMessage:
                      errorType: "Bad Request: Invalid Request Body"
                      statusCode: 400
                      errorDetails:
                        - instancePath: "/body"
                          schemaPath: "#/properties/body/required"
                          keyword: "required"
                          params:
                            missingProperty: "ECstatusEnable or CardRefNum"
                          message: "must have required property"
        "500":
          description: Internal server error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        description: "ReadToken Declined: Token not found "
                        type: string
                      statusCode:
                        description: "500"
                        type: integer
                      errorDetails:
                        type: array
                        items:
                          type: object
                          required:
                            - message
                          properties:
                            message:
                              type: string
              examples:
                internalServerErrorExample:
                  summary: "ReadToken Declined: Token not found"
                  value:
                    errorMessage:
                      errorType: "ReadToken Declined: Token not found"
                      statusCode: "500"
                      errorDetails:
                        - message: "ReadToken Declined: Token not found"
        "504":
          description: Gateway Timeout error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        type: string
                        description: "Gateway Timeout"
                      statusCode:
                        type: integer
                        description: "504"
                      errorDetails:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
              examples:
                gatewayTimeoutExample:
                  summary: Gateway Timeout Example
                  value:
                    errorMessage:
                      errorType: "Gateway Timeout"
                      statusCode: 504
                      errorDetails:
                        - message: "Task timed out after 2.02 seconds"

  /cards/cardstatus:
    post:
      operationId: changeCardStatus
      tags:
        - Cards
      summary: Change Card Status
      description: Update the status of a card by providing the new status and the card reference number. This endpoint allows the modification of the card's current status to be "Active" or "Deactivated".
      requestBody:
        description: Request Details.
        content:
          application/json:
            schema:
              type: object
              required:
                - CardStatus
                - CardRefNum
              properties:
                CardStatus:
                  type: string
                  enum: [Active, Deactivated]
                  description: The status of the card.
                CardRefNum:
                  type: string
                  description: Card Reference Number.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: "Card Status changed successfully!"
              examples:
                successResponse:
                  summary: Successful Request Example
                  value:
                    message: "Card Status changed successfully!"
        "400":
          description: Bad request response "Wrong Field in the body request"
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        description: "Bad Request: Invalid Request Body"
                        type: string
                      statusCode:
                        description: "400"
                        type: integer
                      errorDetails:
                        type: array
                        items:
                          type: object
                          required:
                            - instancePath
                            - schemaPath
                            - keyword
                            - params
                            - message
                          properties:
                            instancePath:
                              type: string
                            schemaPath:
                              type: string
                            keyword:
                              type: string
                            params:
                              type: object
                              required:
                                - missingProperty
                              properties:
                                missingProperty:
                                  type: string
                            message:
                              type: string
              examples:
                badRequestExample:
                  summary: Bad Request - Missing Required Property
                  value:
                    errorMessage:
                      errorType: "Bad Request: Invalid Request Body"
                      statusCode: 400
                      errorDetails:
                        - instancePath: "/body"
                          schemaPath: "#/properties/body/required"
                          keyword: "required"
                          params:
                            missingProperty: "CardRefNum or CardStatus"
                          message: "must have required property"
        "500":
          description: Internal server error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        description: "CardDeclineReason: Token not found"
                        type: string
                      statusCode:
                        description: "500"
                        type: integer
                      errorDetails:
                        type: array
                        items:
                          type: object
                          required:
                            - message
                          properties:
                            message:
                              type: string
              examples:
                internalServerErrorExample:
                  summary: "CardDeclineReason: Token not found"
                  value:
                    errorMessage:
                      errorType: "CardDeclineReason: Token not found"
                      statusCode: "500"
                      errorDetails:
                        - message: "CardDeclineReason: Token not found"
        "504":
          description: Gateway Timeout error response
          content:
            application/json:
              schema:
                type: object
                required:
                  - errorMessage
                properties:
                  errorMessage:
                    type: object
                    required:
                      - errorType
                      - statusCode
                      - errorDetails
                    properties:
                      errorType:
                        type: string
                        description: "Gateway Timeout"
                      statusCode:
                        type: integer
                        description: "504"
                      errorDetails:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
              examples:
                gatewayTimeoutExample:
                  summary: Gateway Timeout Example
                  value:
                    errorMessage:
                      errorType: "Gateway Timeout"
                      statusCode: 504
                      errorDetails:
                        - message: "Task timed out after 2.02 seconds"
                        
components:
  schemas:
    Customer:
      required:
        - RequestType
        - AccountNum
        - BranchName
        - CardRefNum
        - EmbossedName
        - NationalId
        - Passport
        - FirstName
        - LastName
      type: object
      properties:
        RequestType:
          type: string
          description: |
            - `1-NewAccountNewCustomer`: New customer (requires fields `FirstName`,`LastName`).
            - `2-NewAccountExistingCustomer`: Existing customer.
        BranchName:
          type: string
          enum: [GTBR]
          description: "Branch name must be `GTBR`"
        CardRefNum:
          type: string
          description: "Card Reference Number"
        EmbossedName:
          type: string
          description: "Name to emboss on the card"
        AccountNum:
          type: string
          description: "Customer's account number"
        FirstName:
          type: string
          description: "`Mandatory` for new customers (`RequestType: NewAccountNewCustomer`)"
        MiddleName:
          type: string
        LastName:
          type: string
          description: "`Mandatory` for new customers (`RequestType: NewAccountNewCustomer`)"
        NationalId:
          type: string
          description: "`Mandatory` if Passport is not provided"
        Passport:
          type: string
          description: "`Mandatory` if NationalId is not provided"
        BirthDate:
          type: string
          format: date
          example: "1990-01-01"
        Email:
          type: string
          format: email
        MobilePhone:
          type: string
        StreetTitle:
          type: string
        Zip:
          type: string
  parameters:
    apiKey:
      name: x-api-key
      in: header
      required: true
      schema:
        type: string
    contentType:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
